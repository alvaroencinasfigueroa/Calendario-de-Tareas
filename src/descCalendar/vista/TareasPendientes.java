/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package descCalendar.vista;

import desCalendar.controlador.Coordinador;
import descCalendar.modelo.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 
 */
public class TareasPendientes extends javax.swing.JPanel {

    Coordinador coordinador;
    Usuario us;
    Grupo grupo;
    //archivo adjunto
    LinkedList archivo;
    File fichero;

    /**
     * Creates new form TareasPendientes
     */
    public TareasPendientes() {
        initComponents();
        //jLTareasPendientes.setModel(coordinador.getLogica().getNomTareas(us));
        jTextTareaSelect.setEditable(false);
        jTextComentarios.setLineWrap(true);
        jTextComentarios.setEditable(false);
        jTextComentarios.setWrapStyleWord(true);
        jTFNombreArchivo.setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBVolver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextTareaSelect = new javax.swing.JTextArea();
        jBComentar = new javax.swing.JButton();
        jBAdArchivo = new javax.swing.JButton();
        jBEditComentario = new javax.swing.JButton();
        jBElimiComentario = new javax.swing.JButton();
        jRBTodaTarea = new javax.swing.JRadioButton();
        jRBMisTareas = new javax.swing.JRadioButton();
        jLTareasP = new javax.swing.JLabel();
        jLComentariosTarea = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextComentarios = new javax.swing.JTextArea();
        jCBIDComentarios = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jBEntregarTarea = new javax.swing.JButton();
        jTextBuscar = new javax.swing.JTextField();
        jBBuscar = new javax.swing.JButton();
        jCBTareasPendientes = new javax.swing.JComboBox<>();
        jBAbrirArchivo = new javax.swing.JButton();
        jBBorrarArchivo = new javax.swing.JButton();
        jTFNombreArchivo = new javax.swing.JTextField();

        jBVolver.setText("Volver");
        jBVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverActionPerformed(evt);
            }
        });

        jTextTareaSelect.setColumns(20);
        jTextTareaSelect.setRows(5);
        jScrollPane2.setViewportView(jTextTareaSelect);

        jBComentar.setText("Comentar");
        jBComentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBComentarActionPerformed(evt);
            }
        });

        jBAdArchivo.setText("Adjuntar Archivo");
        jBAdArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdArchivoActionPerformed(evt);
            }
        });

        jBEditComentario.setText("Editar Comentario");
        jBEditComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditComentarioActionPerformed(evt);
            }
        });

        jBElimiComentario.setText("Eliminar Comentario");
        jBElimiComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBElimiComentarioActionPerformed(evt);
            }
        });

        jRBTodaTarea.setText("Todas las Tareas");
        jRBTodaTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBTodaTareaActionPerformed(evt);
            }
        });

        jRBMisTareas.setText("Mis Tareas");
        jRBMisTareas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBMisTareasActionPerformed(evt);
            }
        });

        jLTareasP.setText("Tareas Pendientes");

        jLComentariosTarea.setText("Comentarios de Tarea");

        jTextComentarios.setColumns(20);
        jTextComentarios.setRows(5);
        jScrollPane4.setViewportView(jTextComentarios);

        jLabel1.setText("Selecciona un ID de comentario");

        jBEntregarTarea.setText("Entregar Tarea");
        jBEntregarTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEntregarTareaActionPerformed(evt);
            }
        });

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jCBTareasPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTareasPendientesActionPerformed(evt);
            }
        });

        jBAbrirArchivo.setText("Abrir");
        jBAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAbrirArchivoActionPerformed(evt);
            }
        });

        jBBorrarArchivo.setText("Borrar");
        jBBorrarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarArchivoActionPerformed(evt);
            }
        });

        jTFNombreArchivo.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLComentariosTarea))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCBIDComentarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jBEditComentario)
                                    .addComponent(jBElimiComentario))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBEntregarTarea)
                            .addComponent(jBComentar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBAbrirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBBorrarArchivo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jBAdArchivo)))
                                .addGap(72, 72, 72))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBVolver)
                .addGap(223, 223, 223)
                .addComponent(jLTareasP)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBBuscar))
                    .addComponent(jCBTareasPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBMisTareas)
                    .addComponent(jRBTodaTarea))
                .addGap(185, 185, 185))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBVolver)
                    .addComponent(jLTareasP))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar)
                    .addComponent(jRBTodaTarea))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBTareasPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRBMisTareas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jBAdArchivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBAbrirArchivo)
                            .addComponent(jBBorrarArchivo)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jBComentar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBEntregarTarea)))
                .addGap(12, 12, 12)
                .addComponent(jLComentariosTarea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(jCBIDComentarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBEditComentario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBElimiComentario))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRBTodaTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBTodaTareaActionPerformed
        if (jRBTodaTarea.isSelected()) {
            jRBMisTareas.setSelected(false);
            if (!coordinador.getLogica().getGrupos().accederM(us).getListTareas().vacio()) {
                jCBTareasPendientes.setModel(coordinador.getLogica().getNomTareas(us));
            }
        }
    }//GEN-LAST:event_jRBTodaTareaActionPerformed

    private void jRBMisTareasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBMisTareasActionPerformed
        if (jRBMisTareas.isSelected()) {
            jRBTodaTarea.setSelected(false);
            if (!coordinador.getLogica().getGrupos().accederM(us).getListTareas().vacio()) {
                jCBTareasPendientes.setModel(coordinador.getLogica().getNomTareasUsuEsp(us));
            }
        }
    }//GEN-LAST:event_jRBMisTareasActionPerformed

    private void jBVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverActionPerformed
        if (us.getLider()) {
            coordinador.cargarPanel(4, us);
        } else {
            coordinador.cargarPanel(5, us);
        }
    }//GEN-LAST:event_jBVolverActionPerformed

    private void jBComentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBComentarActionPerformed
        if (jCBTareasPendientes.getSelectedItem() != null) {
            String com = "";
            com = JOptionPane.showInputDialog(null, "Ingrese comentario:");
            Comentario nCom = new Comentario(us.getUserName(), com);

            grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).agregarCom(nCom);
            jTextComentarios.setText(grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).toStringComentarios());
            DefaultComboBoxModel IDTareas = new DefaultComboBoxModel();
            IDTareas = coordinador.getLogica().getIDComenUsuEsp(us, jCBTareasPendientes.getSelectedItem().toString());
            jCBIDComentarios.setModel(IDTareas);
            coordinador.getLogica().escribirListas();
        }
    }//GEN-LAST:event_jBComentarActionPerformed

    private void jBEditComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditComentarioActionPerformed

        if (jCBTareasPendientes.getSelectedItem() != null && jCBIDComentarios.getSelectedItem() != null) {
            String com;
            Comentario comentario = grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem()
                    .toString()).getLComentarios().accederID((int) jCBIDComentarios.getSelectedItem());
            com = JOptionPane.showInputDialog("Ingrese nuevo comentario:", null);

            if (us.getUserName().equals(comentario.getAutor())) {

                comentario.setComentario(com);

                jTextComentarios.setText(grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).toStringComentarios());

                DefaultComboBoxModel IDTareas = new DefaultComboBoxModel();
                IDTareas = coordinador.getLogica().getIDComenUsuEsp(us, jCBTareasPendientes.getSelectedItem().toString());
                jCBIDComentarios.setModel(IDTareas);
                JOptionPane.showMessageDialog(null, "Su comentario se ha editado con exito");
                coordinador.getLogica().escribirListas();
            } else {
                JOptionPane.showMessageDialog(null, "Solo puedes editar comentarios propios");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un ID");
        }
    }//GEN-LAST:event_jBEditComentarioActionPerformed

    private void jBElimiComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBElimiComentarioActionPerformed
        if (jCBTareasPendientes.getSelectedItem() != null && jCBIDComentarios.getSelectedItem() != null) {
            Comentario comentario = grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem()
                    .toString()).getLComentarios().accederID((int) jCBIDComentarios.getSelectedItem());

            if (us.getUserName().equals(comentario.getAutor())) {
                int res = JOptionPane.showConfirmDialog(null, "¿Seguro quiere eliminar este comentario?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (res == JOptionPane.YES_OPTION) {

                    grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).getLComentarios().eliminar(grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).getLComentarios().posicion((int) jCBIDComentarios.getSelectedItem()));
                    jTextComentarios.setText(grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).toStringComentarios());
                    DefaultComboBoxModel IDTareas = new DefaultComboBoxModel();
                    IDTareas = coordinador.getLogica().getIDComenUsuEsp(us, jCBTareasPendientes.getSelectedItem().toString());
                    jCBIDComentarios.setModel(IDTareas);
                    JOptionPane.showMessageDialog(null, "Su comentario se eliminó con exito.");
                    coordinador.getLogica().escribirListas();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Solo puedes eliminar comentarios propios");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un ID");
        }
    }//GEN-LAST:event_jBElimiComentarioActionPerformed

    private void jBEntregarTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEntregarTareaActionPerformed
        if (jCBTareasPendientes.getSelectedItem() != null) {
            if (coordinador.getLogica().getGrupos().accederM(us).getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).getResponsable().getUserName().equals(us.getUserName())) {
                int res = JOptionPane.showConfirmDialog(null, "¿Seguro quiere entregar esta tarea?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (res == JOptionPane.YES_OPTION) {
                    grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).setArchivo(archivo);
                    if (archivo != null) {
                        String ruta = coordinador.getLogica().guardarArchivo(archivo, fichero);
                        grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).setFichero(ruta);
                    }
                    grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).setEstado(true);
                    grupo.agregarHistoria(coordinador.getLogica().getGrupos().accederM(us).getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()));
                    grupo.getListTareas().eliminarNom(coordinador.getLogica().getGrupos().accederM(us).getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).getNombre());
                    reinicio();
                    if (jRBTodaTarea.isSelected()) {
                        if (!grupo.getListTareas().vacio()) {
                            jCBTareasPendientes.setModel(coordinador.getLogica().getNomTareas(us));
                        }
                    } else {
                        if (jRBMisTareas.isSelected()) {
                            if (!coordinador.getLogica().getGrupos().accederM(us).getListTareas().vacio()) {
                                jCBTareasPendientes.setModel(coordinador.getLogica().getNomTareasUsuEsp(us));
                            }
                        }
                    }
                    JOptionPane.showMessageDialog(null, "Tarea entregada con exito.");

                    coordinador.getLogica().escribirListas();
                }

            } else {
                JOptionPane.showMessageDialog(null, "Sólo el responsable de la tarea puede entregarla.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una tarea.");
        }
    }//GEN-LAST:event_jBEntregarTareaActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        if (!jTextBuscar.getText().equals("")) {
            LTareas u = coordinador.getLogica().buscarCoincidenciasTareas(grupo.getListTareas(), jTextBuscar.getText());
            llenarJCBTarea(u);
            jRBTodaTarea.setSelected(false);
            jRBMisTareas.setSelected(false);
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jCBTareasPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTareasPendientesActionPerformed
        jCBIDComentarios.removeAllItems();
        jTextTareaSelect.setText("");
        if (jCBTareasPendientes.getSelectedItem() != null) {
            jTextTareaSelect.setText(grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).toString());
            jTextComentarios.setText(grupo.getListTareas().accederNom(jCBTareasPendientes.getSelectedItem().toString()).toStringComentarios());
            DefaultComboBoxModel IDTareas = new DefaultComboBoxModel();
            IDTareas = coordinador.getLogica().getIDComenUsuEsp(us, jCBTareasPendientes.getSelectedItem().toString());

            jCBIDComentarios.setModel(IDTareas);
        }
    }//GEN-LAST:event_jCBTareasPendientesActionPerformed

    private void jBAdArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdArchivoActionPerformed
        JFileChooser jFCArchivo = new JFileChooser();

        int seleccion = jFCArchivo.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            fichero = jFCArchivo.getSelectedFile();
            jTFNombreArchivo.setText(fichero.getPath());
            archivo = coordinador.getLogica().leerArchivo(fichero);
        }
    }//GEN-LAST:event_jBAdArchivoActionPerformed

    private void jBAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAbrirArchivoActionPerformed
        try {
            ProcessBuilder pB = new ProcessBuilder();
            pB.command("cmd.exe", "/c", jTFNombreArchivo.getText());
            pB.start();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No es posible abrir el archivo");
        }
    }//GEN-LAST:event_jBAbrirArchivoActionPerformed

    private void jBBorrarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarArchivoActionPerformed
        jTFNombreArchivo.setText("");
        fichero = null;
        archivo = null;
    }//GEN-LAST:event_jBBorrarArchivoActionPerformed

    public void setCoordinador(Coordinador coordinador) {
        this.coordinador = coordinador;
    }

    public void setUsuario(Usuario us) {
        this.us = us;
        grupo = coordinador.getLogica().getGrupos().accederM(us);
    }

    public void reinicio() {
        jCBIDComentarios.removeAllItems();
        jCBTareasPendientes.removeAllItems();
        jRBMisTareas.setSelected(false);
        jRBTodaTarea.setSelected(false);
        jTextComentarios.setText("");
        jTextTareaSelect.setText("");
        jTextBuscar.setText("");
        jTFNombreArchivo.setText("");
        fichero = null;
    }

    public void llenarJCBTarea(Coordinador c, Usuario l) {
        jCBTareasPendientes.removeAllItems();

        LTareas u = c.getLogica().getGrupos().accederM(us).getListTareas();
        int i = 0;
        while (u.accederP(i) != null) {
            jCBTareasPendientes.addItem(u.accederP(i).getNombre());
            i++;
        }
    }

    public void llenarJCBTarea(LTareas u) {
        jCBTareasPendientes.removeAllItems();
        int i = 0;
        while (u.accederP(i) != null) {
            jCBTareasPendientes.addItem(u.accederP(i).getNombre());
            i++;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAbrirArchivo;
    private javax.swing.JButton jBAdArchivo;
    private javax.swing.JButton jBBorrarArchivo;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBComentar;
    private javax.swing.JButton jBEditComentario;
    private javax.swing.JButton jBElimiComentario;
    private javax.swing.JButton jBEntregarTarea;
    private javax.swing.JButton jBVolver;
    private javax.swing.JComboBox<String> jCBIDComentarios;
    private javax.swing.JComboBox<String> jCBTareasPendientes;
    private javax.swing.JLabel jLComentariosTarea;
    private javax.swing.JLabel jLTareasP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRBMisTareas;
    private javax.swing.JRadioButton jRBTodaTarea;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTFNombreArchivo;
    private javax.swing.JTextField jTextBuscar;
    private javax.swing.JTextArea jTextComentarios;
    private javax.swing.JTextArea jTextTareaSelect;
    // End of variables declaration//GEN-END:variables
}
